/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package org.foo.generated.public.user_logs

import org.foo.generated.customtypes.Defaulted
import org.foo.generated.customtypes.TypoOffsetDateTime
import org.foo.generated.public.users.UsersId
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** This class corresponds to a row in table `public.user_logs` which has not been persisted yet */
case class UserLogsRowUnsaved(
  userLogId: UserLogsId,
  /** Points to [[users.UsersRow.userId]] */
  userId: UsersId,
  message: String,
  /** Default: now() */
  createdAt: Defaulted[TypoOffsetDateTime] = Defaulted.UseDefault
) {
  def toRow(createdAtDefault: => TypoOffsetDateTime): UserLogsRow =
    UserLogsRow(
      userLogId = userLogId,
      userId = userId,
      message = message,
      createdAt = createdAt match {
                    case Defaulted.UseDefault => createdAtDefault
                    case Defaulted.Provided(value) => value
                  }
    )
}
object UserLogsRowUnsaved {
  implicit lazy val reads: Reads[UserLogsRowUnsaved] = Reads[UserLogsRowUnsaved](json => JsResult.fromTry(
      Try(
        UserLogsRowUnsaved(
          userLogId = json.\("user_log_id").as(UserLogsId.reads),
          userId = json.\("user_id").as(UsersId.reads),
          message = json.\("message").as(Reads.StringReads),
          createdAt = json.\("created_at").as(Defaulted.reads(TypoOffsetDateTime.reads))
        )
      )
    ),
  )
  implicit lazy val writes: OWrites[UserLogsRowUnsaved] = OWrites[UserLogsRowUnsaved](o =>
    new JsObject(ListMap[String, JsValue](
      "user_log_id" -> UserLogsId.writes.writes(o.userLogId),
      "user_id" -> UsersId.writes.writes(o.userId),
      "message" -> Writes.StringWrites.writes(o.message),
      "created_at" -> Defaulted.writes(TypoOffsetDateTime.writes).writes(o.createdAt)
    ))
  )
}

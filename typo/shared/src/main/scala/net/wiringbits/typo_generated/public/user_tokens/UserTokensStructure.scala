/** File has been automatically generated by `typo`.
  *
  * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
  */
package net
package wiringbits
package typo_generated
package public
package user_tokens

import java.time.Instant
import java.util.UUID
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

class UserTokensStructure[Row](
    val prefix: Option[String],
    val extract: Row => UserTokensRow,
    val merge: (Row, UserTokensRow) => Row
) extends Relation[UserTokensFields, UserTokensRow, Row]
    with UserTokensFields[Row] { outer =>

  override val userTokenId = new IdField[ /* user-picked */ UUID, Row](prefix, "user_token_id", None, Some("uuid"))(
    x => extract(x).userTokenId,
    (row, value) => merge(row, extract(row).copy(userTokenId = value))
  )
  override val token = new Field[String, Row](prefix, "token", None, None)(
    x => extract(x).token,
    (row, value) => merge(row, extract(row).copy(token = value))
  )
  override val tokenType = new Field[String, Row](prefix, "token_type", None, None)(
    x => extract(x).tokenType,
    (row, value) => merge(row, extract(row).copy(tokenType = value))
  )
  override val createdAt =
    new Field[ /* user-picked */ Instant, Row](prefix, "created_at", Some("text"), Some("timestamptz"))(
      x => extract(x).createdAt,
      (row, value) => merge(row, extract(row).copy(createdAt = value))
    )
  override val expiresAt =
    new Field[ /* user-picked */ Instant, Row](prefix, "expires_at", Some("text"), Some("timestamptz"))(
      x => extract(x).expiresAt,
      (row, value) => merge(row, extract(row).copy(expiresAt = value))
    )
  override val userId = new Field[ /* user-picked */ UUID, Row](prefix, "user_id", None, Some("uuid"))(
    x => extract(x).userId,
    (row, value) => merge(row, extract(row).copy(userId = value))
  )

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](userTokenId, token, tokenType, createdAt, expiresAt, userId)

  override def copy[NewRow](
      prefix: Option[String],
      extract: NewRow => UserTokensRow,
      merge: (NewRow, UserTokensRow) => NewRow
  ): UserTokensStructure[NewRow] =
    new UserTokensStructure(prefix, extract, merge)
}

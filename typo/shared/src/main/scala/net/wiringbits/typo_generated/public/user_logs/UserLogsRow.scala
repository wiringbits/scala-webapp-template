/** File has been automatically generated by `typo`.
  *
  * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
  */
package net
package wiringbits
package typo_generated
package public
package user_logs

import anorm.Column
import anorm.RowParser
import anorm.Success
import java.time.Instant
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class UserLogsRow(
    userLogId: /* user-picked */ UUID,
    /** Points to [[users.UsersRow.userId]] */
    userId: /* user-picked */ UUID,
    message: String,
    createdAt: /* user-picked */ Instant
)

object UserLogsRow {
  implicit lazy val reads: Reads[UserLogsRow] = Reads[UserLogsRow](json =>
    JsResult.fromTry(
      Try(
        UserLogsRow(
          userLogId = json.\("user_log_id").as(Reads.uuidReads),
          userId = json.\("user_id").as(Reads.uuidReads),
          message = json.\("message").as(Reads.StringReads),
          createdAt = json.\("created_at").as(implicitly[Reads[Instant]])
        )
      )
    )
  )
  def rowParser(idx: Int): RowParser[UserLogsRow] = RowParser[UserLogsRow] { row =>
    Success(
      UserLogsRow(
        userLogId = row(idx + 0)(Column.columnToUUID),
        userId = row(idx + 1)(Column.columnToUUID),
        message = row(idx + 2)(Column.columnToString),
        createdAt = row(idx + 3)(Implicits.instantColumn)
      )
    )
  }
  implicit lazy val writes: OWrites[UserLogsRow] = OWrites[UserLogsRow](o =>
    new JsObject(
      ListMap[String, JsValue](
        "user_log_id" -> Writes.UuidWrites.writes(o.userLogId),
        "user_id" -> Writes.UuidWrites.writes(o.userId),
        "message" -> Writes.StringWrites.writes(o.message),
        "created_at" -> implicitly[Writes[Instant]].writes(o.createdAt)
      )
    )
  )
}
